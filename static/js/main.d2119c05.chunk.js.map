{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","index.module.css","Components/Form/Form.module.css","redux/contacs-types.js","redux/contacts-actions.js","Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","name","number","type","types","payload","id","shortid","generate","todoId","value","Form","state","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","labelName","htmlFor","nameInputId","onChange","phoneInputId","Component","connect","dispatch","contact","contactsActions","contactsList","contacts","filter","toLowerCase","includes","onDelete","contactInfo","map","info","onClick","onFilterChanged","text","label","App","container","ContactList","combineReducers","store","createStore","contactsReducer","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2119c05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInfo\":\"ContactList_contactInfo__rrS6T\",\"contact\":\"ContactList_contact__2n-Pp\",\"info\":\"ContactList_info__1L6BP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19jWm\",\"text\":\"Filter_text__WaNGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__12MZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1rzz1\",\"labelName\":\"Form_labelName__VeEKO\",\"name\":\"Form_name__GxCWe\",\"number\":\"Form_number__3VOWr\"};","export default {\n    ADD: 'contacts/add',\n    DELETE: 'contacts/delete',\n    CHANGE_FILTER: 'contacts/changeFilter',\n  };","import shortid from 'shortid';\nimport types from './contacs-types';\n\nconst addContact = ({name, number}) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = todoId => ({\n  type: types.DELETE,\n  payload: todoId,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addContact, deleteContact, changeFilter };","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport s from './Form.module.css';\nimport contactsActions from '../../redux/contacts-actions';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: shortid.generate(), [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.labelName} htmlFor={this.nameInputId}>\n          Name\n          <input\n          className={s.name}\n            type=\"phone\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          ></input>\n        </label>\n        <label className={s.labelName} htmlFor={this.phoneInputId}>\n          Number\n          <input\n          className={s.number}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.phoneInputId}\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);","import s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n\nfunction ContactsRender({ contactsList, onDelete }) {\n  return (\n      <ul className={s.contactInfo}>\n        {contactsList &&\n          contactsList.map(({ id, name, number }) => (\n            <li className={s.info} key={id}>\n              <span className={s.contact}>\n                {name} - {number}\n              </span>\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n  );\n}\n\nconst visibleContacts = (contacts, filter) => {\nreturn contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase())) \n}\n\nconst mapStateToProps = (state) => ({\n  contactsList: visibleContacts(state.contacts, state.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsRender);\n","import s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n\nconst Filter = ({ onFilterChanged }) => {\n  const handleFilterChanged = e => {\n    const value = e.currentTarget.value;\n    onFilterChanged(value);\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.text} type=\"text\" onChange={handleFilterChanged}></input>\n    </label>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChanged: text => dispatch(contactsActions.changeFilter(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);;\n","import React, { Component } from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport s from './index.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={s.container}>\n        <Form />\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}","import { combineReducers } from 'redux';\nimport types from './contacs-types';\n\nconst contacts = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from '../redux/contacts-reducer';\n\nconst store = createStore(contactsReducer, composeWithDevTools());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n  \n"],"sourceRoot":""}